//
// Generated file, do not edit! Created by nedtool 5.6 from notify_host.msg.
//

#ifndef __NOTIFY_HOST_M_H
#define __NOTIFY_HOST_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>notify_host.msg:17</tt> by nedtool.
 * <pre>
 * message MessageNotify
 * {
 *     int indexOfENBChoseLast;
 *     int idNodeIsNotifyed;
 * }
 * </pre>
 */
class MessageNotify : public ::omnetpp::cMessage
{
  protected:
    int indexOfENBChoseLast;
    int idNodeIsNotifyed;

  private:
    void copy(const MessageNotify& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MessageNotify&);

  public:
    MessageNotify(const char *name=nullptr, short kind=0);
    MessageNotify(const MessageNotify& other);
    virtual ~MessageNotify();
    MessageNotify& operator=(const MessageNotify& other);
    virtual MessageNotify *dup() const override {return new MessageNotify(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getIndexOfENBChoseLast() const;
    virtual void setIndexOfENBChoseLast(int indexOfENBChoseLast);
    virtual int getIdNodeIsNotifyed() const;
    virtual void setIdNodeIsNotifyed(int idNodeIsNotifyed);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MessageNotify& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MessageNotify& obj) {obj.parsimUnpack(b);}


#endif // ifndef __NOTIFY_HOST_M_H

